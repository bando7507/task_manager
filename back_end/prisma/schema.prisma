
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}




model User {
  id       Int     @id @default(autoincrement())
  nom      String
  prenoms  String
  email    String  @unique
  username String  @unique
  password String
  taskLists TaskList[]
}


// model Account {
//   id                 Int       @id @default(autoincrement())
//   compoundId         String    @unique @map(name: "compound_id")
//   userId             Int       @map(name: "user_id")
//   providerType       String    @map(name: "provider_type")
//   providerId         String    @map(name: "provider_id")
//   providerAccountId  String    @map(name: "provider_account_id")
//   refreshToken       String?   @map(name: "refresh_token")
//   accessToken        String?   @map(name: "access_token")
//   accessTokenExpires DateTime? @map(name: "access_token_expires")
//   createdAt          DateTime  @default(now()) @map(name: "created_at")
//   updatedAt          DateTime  @default(now()) @map(name: "updated_at")

//   @@index([providerAccountId], name: "providerAccountId")
//   @@index([providerId], name: "providerId")
//   @@index([userId], name: "userId")
//   @@map(name: "accounts")
// }

// model Session {
//   id           Int      @id @default(autoincrement())
//   userId       Int      @map(name: "user_id")
//   expires      DateTime
//   sessionToken String   @unique @map(name: "session_token")
//   accessToken  String   @unique @map(name: "access_token")
//   createdAt    DateTime @default(now()) @map(name: "created_at")
//   updatedAt    DateTime @default(now()) @map(name: "updated_at")

//   @@map(name: "sessions")
// }

// model User {
//   id            Int       @id @default(autoincrement())
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime? @map(name: "email_verified")
//   image         String?
//   password      String 
//   createdAt     DateTime  @default(now()) @map(name: "created_at")
//   updatedAt     DateTime  @default(now()) @map(name: "updated_at")
//   taskLists TaskList[]

//   @@map(name: "users")
// }

// model VerificationRequest {
//   id         Int      @id @default(autoincrement())
//   identifier String
//   token      String   @unique
//   expires    DateTime
//   createdAt  DateTime @default(now()) @map(name: "created_at")
//   updatedAt  DateTime @default(now()) @map(name: "updated_at")

//   @@map(name: "verification_requests")
// }

model TaskList {
  id          Int      @id @default(autoincrement())
  datecreate  DateTime
  description String
  title       String
  codecoleur String
  tasks       Task[]
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Task {
  id         Int      @id @default(autoincrement())
  task       String
  completed  Boolean
  cancel     Boolean
  taskListId Int
  taskList   TaskList @relation(fields: [taskListId], references: [id])
}
